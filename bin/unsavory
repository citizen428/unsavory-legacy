#! /usr/bin/env ruby
# Copyright (c) 2009 Michael Kohl

$:.unshift File.join(File.dirname(__FILE__), '../lib')
%w{rubygems net/http utilities pinboard logger progressbar}.each { |x| require x }

user, pass = Utilities.get_pinboard_credentials
pinboard = Pinboard.new(user, pass)

logger = Logger.new('unsavory.log')
logger.info "Unsavory started: #{Time.now.strftime('%Y-%m-%d %H:%M')}"

moved = 0

begin
  urls = pinboard.get_all_urls
rescue => e
  puts %{
  I couldn't get your posts from Pinboard!

  Either you entered your username/password wrong,
  or the site is temporarily unreachable.
  }
  exit 2
end

puts "\n#{user} has #{urls.length} bookmarks."

pbar = ProgressBar.new("URLs", urls.size)

urls.each_with_index do |url, idx|
  pbar.inc
  # Hackety fix for #1
  uri = URI.parse(url) rescue next
  response = nil

  begin
    Net::HTTP.start(uri.host, uri.port) do |http|
      response = http.head(uri.path.size > 0 ? uri.path : "/")
    end
  rescue Errno::ENOENT
    pinboard.delete(url)
    logger.info "Deleted #{url}"
    next
  # In 1.8, TimeoutError does not inherit from StandardError
  rescue StandardError, Timeout::Error => e
    logger.error "#{e.message} - #{url}"
    next
  end

  # handle redirects
  if response.is_a?(Net::HTTPRedirection)
    new_uri = URI.parse(response['location'])
    moved += 1
    logger.info "#{url} redirects to #{new_uri}"
    next
  end

  if response.code == '404'
    pinboard.delete(url)
    logger.info "Deleted #{url}"
  elsif response.code != '200'
    logger.info "#{response.code}: #{url}"
  end
end
pbar.finish
logger.close
puts "\n#{moved} URIs are redirecting to new locations, you might want to fix them." if moved > 0
