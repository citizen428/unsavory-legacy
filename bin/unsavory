#! /usr/bin/env ruby
# Copyright (c) 2009-2013 Michael Kohl

require "rubygems" # for the 1.8 users
require "logger"
require "net/http"
require "progressbar"
require_relative "../lib/pinboard_client.rb"
require_relative "../lib/utilities.rb"

user, pass = Utilities.get_credentials
pinboard_client = PinboardClient.new(user, pass)
logger = Logger.new('unsavory.log')

logger.info "Unsavory started: #{Time.now.strftime('%Y-%m-%d %H:%M')}"

puts "Retrieving URLs"
urls = pinboard_client.get_urls
unless urls
  puts "\nCould not retrieve URLs!\nPlease check your login credentials."
  exit 1
end
puts "\n#{user} has #{urls.length} bookmarks."

pbar = ProgressBar.new("URLs", urls.size)
moved = 0

urls.each_with_index do |url, idx|
  pbar.inc
  delete = false

  # Hackety fix for issue #1
  uri = URI.parse(url) rescue next

  begin
    Net::HTTP.start(uri.host, uri.port) do |http|
      response = http.head(uri.path.empty? ? '/' : uri.path)

      # handle redirects
      if response.is_a?(Net::HTTPRedirection)
        moved += 1
        logger.info "#{url} redirects to #{response['location']}"
        next
      end

      if response.code == '404'
        delete = true
      elsif response.code != '200'
        logger.info "#{response.code}: #{url}"
      end
    end
  rescue Errno::ENOENT
    delete = true
  # In 1.8, TimeoutError does not inherit from StandardError
  rescue StandardError, Timeout::Error => e
    logger.error "#{e.message} - #{url}"
  end

  if delete
    pinboard_client.delete(url)
    logger.info "Deleted #{url}"
  end
end

pbar.finish
logger.close

puts "\n#{moved} URIs are redirecting to new locations, you might want to fix them." if moved > 0
