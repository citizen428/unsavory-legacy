#! /usr/bin/env ruby

$:.unshift File.join(File.dirname(__FILE__), '/lib')
%w{rubygems net/http delicious}.each { |x| require x}
begin
  require 'highline'
rescue LoadError
  no_highline = true
end

CFG_FILE = File.join(ENV['HOME'], ".#{File.basename($0)}")

if File.exists?(CFG_FILE)
  puts "Using config file '#{CFG_FILE}'"
  user, pass = File.new(CFG_FILE).gets.chomp.split(':')
elsif !no_highline
  hl = HighLine.new
  user = hl.ask('Enter Delicious username: ')
  pass = hl.ask('Enter Delicious password: ') { |q| q.echo = "*" }
else
  puts %{
    Can't find config file '#{CFG_FILE}' and you 
    don't seem to have HighLine installed. Aborting!
  }
  exit 1
end

delicious = Delicious.new(user, pass)

begin
  urls = delicious.get_all_urls
rescue => e
  puts %{
  I couldn't get your posts from Delicious!

  Either you entered your username/password wrong,
  or the site is temporarily unreachable.
  }
  exit 2
end

puts "\n#{user} has #{urls.length} bookmarks."

urls.each_with_index do |url, idx|
  print "Processing URL #%04d: " % (idx+1)
  uri = URI.parse(url)
  response = nil

  begin
    Net::HTTP.start(uri.host, uri.port) do |http|
      response = http.head(uri.path.size > 0 ? uri.path : "/")
    end
  rescue => e 
    puts "#{e.message} - #{url}" 
    next
  end

  puts case response.code
    when '200' then 'OK'
    when '404' then 
      delicious.delete(url)
      "Deleted #{url}"
    else "#{response.code}: #{url}"
  end
end